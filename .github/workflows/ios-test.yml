name: ios-test

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  setup-versions:
    runs-on: ubuntu-latest
    outputs:
      xcodePath: ${{ steps.set-xcode-path.outputs.xcodePath }}
      javaVersion: ${{ steps.set-java-version.outputs.javaVersion }}
    steps:
      - id: set-xcode-path
        name: Set Xcode path
        run: |
          xcode_version='13.0'
          xcode_path="/Applications/Xcode_${xcode_version}.app"
          echo "::set-output name=xcodePath::$xcode_path"
      - id: set-java-version
        name: Set Java version
        run: |
          java_version='11'
          echo "::set-output name=javaVersion::$java_version"
  build-modules:
    name: "iOS Buid Test for Modules"
    runs-on: macos-11
    needs: setup-versions
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ needs.setup-versions.outputs.javaVersion }}
      - name: Select Xcode Version
        run: sudo xcode-select -s "${{ needs.setup-versions.outputs.xcodePath }}"
      - name: Show Xcode Version
        run: xcodebuild -version
      - uses: eskatos/gradle-command-action@v1
        with:
          arguments: "ios-framework:createXCFramework"
          dependencies-cache-key: |
            **/*.gradle
            **/*.gradle.kts
            buildSrc/src/**/*.kt
            **/gradle.properties
            gradle/**
      - name: Generate Strings & Colors & Assets
        working-directory: ./ios
        run: make run-swiftgen
      - name: Build Test Modules
        working-directory: ./ios
        run: make build-modules

  test-modules:
    name: "iOS Test for Modules"
    runs-on: macos-11
    needs: setup-versions
    steps:
      - uses: actions/checkout@v2
      - name: Create LFS file list
        run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
      - name: Restore LFS cache
        uses: actions/cache@v2
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}-v1
      - name: Git LFS Pull
        run: git lfs pull
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ needs.setup-versions.outputs.javaVersion }}
      - name: Select Xcode Version
        run: sudo xcode-select -s "${{ needs.setup-versions.outputs.xcodePath }}"
      - name: Show Xcode Version
        run: xcodebuild -version
      - uses: eskatos/gradle-command-action@v1
        with:
          arguments: "ios-framework:createXCFramework"
          dependencies-cache-key: |
            **/*.gradle
            **/*.gradle.kts
            buildSrc/src/**/*.kt
            **/gradle.properties
            gradle/**
      - name: Generate Strings & Colors & Assets
        working-directory: ./ios
        run: make run-swiftgen
      - name: Build Test Modules
        working-directory: ./ios
        run: make test-modules
      - name: uses: kishikawakatsumi/xcresulttool@v1.0.3
        with:
          path: |
            BuildResults-ModuleTest-Debug
        if: success() || failure()

  build-app-debug:
    name: "iOS Buid Test on Debug Configuration"
    runs-on: macos-11
    needs: setup-versions
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ needs.setup-versions.outputs.javaVersion }}
      - name: Select Xcode Version
        run: sudo xcode-select -s "${{ needs.setup-versions.outputs.xcodePath }}"
      - name: Show Xcode Version
        run: xcodebuild -version
      - uses: eskatos/gradle-command-action@v1
        with:
          arguments: "ios-framework:createXCFramework"
          dependencies-cache-key: |
            **/*.gradle
            **/*.gradle.kts
            buildSrc/src/**/*.kt
            **/gradle.properties
            gradle/**
      - name: Generate Strings & Colors & Assets
        working-directory: ./ios
        run: make run-swiftgen
      - name: Build Test for Debug App
        working-directory: ./ios
        run: make build-app-debug

  build-app-release:
    name: "iOS Buid Test on Release Configuration"
    runs-on: macos-11
    needs: setup-versions
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: ${{ needs.setup-versions.outputs.javaVersion }}
      - name: Select Xcode Version
        run: sudo xcode-select -s "${{ needs.setup-versions.outputs.xcodePath }}"
      - name: Show Xcode Version
        run: xcodebuild -version
      - uses: eskatos/gradle-command-action@v1
        env:
          CONFIGURATION: Release
        with:
          arguments: "ios-framework:createXCFramework"
          dependencies-cache-key: |
            **/*.gradle
            **/*.gradle.kts
            buildSrc/src/**/*.kt
            **/gradle.properties
            gradle/**
      - name: Generate Strings & Colors & Assets
        working-directory: ./ios
        run: make run-swiftgen
      - name: Build Test for Release App
        working-directory: ./ios
        run: make build-app-release
